{"ast":null,"code":"var _jsxFileName = \"/Users/warrdadlani/Documents/Projects/Projects/YourLineRepo/yourline-react/src/components/text/TextLabel.js\";\nimport React from 'react';\n\n/*\n* Example use:\n* <TextLabel type={TextLabelType.PARAGRAPH} text=\"Aligned left\" alignment={TextLabelAlignment.LEFT} />\n* <TextLabel type={TextLabelType.PARAGRAPH} text=\"Aligned center\" alignment={TextLabelAlignment.CENTER} />\n* <TextLabel type={TextLabelType.PARAGRAPH} text=\"Aligned right\" alignment={TextLabelAlignment.RIGHT} />\n*/\n\nexport const TextLabelType = {\n  PARAGRAPH: 'p',\n  HEADING1: 'h1',\n  HEADING2: 'h2',\n  HEADING3: 'h3',\n  HEADING4: 'h4'\n};\nexport const TextLabelAlignment = {\n  LEFT: 'left',\n  RIGHT: 'right',\n  CENTER: 'center'\n};\nconst TextLabel = ({\n  TextLabelType,\n  fontSize,\n  text,\n  TextLabelAlignment\n}) => {\n  const elementType = TextLabelType || TextLabelType.PARAGRAPH;\n  const alignmentType = TextLabelAlignment || TextLabelAlignment.LEFT;\n  console.log('alignment and type', alignment, type);\n  const elementStyle = {\n    fontSize: type === TextLabelType.PARAGRAPH ? fontSize : undefined,\n    textAlign: alignmentType\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(elementType, {\n    style: elementStyle\n  }, text));\n};\nexport default TextLabel;","map":{"version":3,"names":["React","TextLabelType","PARAGRAPH","HEADING1","HEADING2","HEADING3","HEADING4","TextLabelAlignment","LEFT","RIGHT","CENTER","TextLabel","fontSize","text","elementType","alignmentType","console","log","alignment","type","elementStyle","undefined","textAlign","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style"],"sources":["/Users/warrdadlani/Documents/Projects/Projects/YourLineRepo/yourline-react/src/components/text/TextLabel.js"],"sourcesContent":["import React from 'react';\n\n/*\n* Example use:\n* <TextLabel type={TextLabelType.PARAGRAPH} text=\"Aligned left\" alignment={TextLabelAlignment.LEFT} />\n* <TextLabel type={TextLabelType.PARAGRAPH} text=\"Aligned center\" alignment={TextLabelAlignment.CENTER} />\n* <TextLabel type={TextLabelType.PARAGRAPH} text=\"Aligned right\" alignment={TextLabelAlignment.RIGHT} />\n*/\n\nexport const TextLabelType = {\n    PARAGRAPH: 'p',\n    HEADING1: 'h1',\n    HEADING2: 'h2',\n    HEADING3: 'h3',\n    HEADING4: 'h4',\n};\n\nexport const TextLabelAlignment = {\n    LEFT: 'left',\n    RIGHT: 'right',\n    CENTER: 'center',\n};\n\nconst TextLabel = ({ TextLabelType, fontSize, text, TextLabelAlignment }) => {\n    const elementType = TextLabelType || TextLabelType.PARAGRAPH;\n    const alignmentType = TextLabelAlignment || TextLabelAlignment.LEFT;\n\n    console.log('alignment and type', alignment, type)\n    const elementStyle = {\n        fontSize: type === TextLabelType.PARAGRAPH ? fontSize : undefined,\n        textAlign: alignmentType,\n    };\n\n    return (\n        <div>\n            {React.createElement(elementType, { style: elementStyle }, text)}\n        </div>\n    );\n}\n\nexport default TextLabel;\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG;EACzBC,SAAS,EAAE,GAAG;EACdC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE;AACd,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG;EAC9BC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAC;EAAEV,aAAa;EAAEW,QAAQ;EAAEC,IAAI;EAAEN;AAAmB,CAAC,KAAK;EACzE,MAAMO,WAAW,GAAGb,aAAa,IAAIA,aAAa,CAACC,SAAS;EAC5D,MAAMa,aAAa,GAAGR,kBAAkB,IAAIA,kBAAkB,CAACC,IAAI;EAEnEQ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,SAAS,EAAEC,IAAI,CAAC;EAClD,MAAMC,YAAY,GAAG;IACjBR,QAAQ,EAAEO,IAAI,KAAKlB,aAAa,CAACC,SAAS,GAAGU,QAAQ,GAAGS,SAAS;IACjEC,SAAS,EAAEP;EACf,CAAC;EAED,oBACIf,KAAA,CAAAuB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACK7B,KAAK,CAACuB,aAAa,CAACT,WAAW,EAAE;IAAEgB,KAAK,EAAEV;EAAa,CAAC,EAAEP,IAAI,CAC9D,CAAC;AAEd,CAAC;AAED,eAAeF,SAAS"},"metadata":{},"sourceType":"module"}