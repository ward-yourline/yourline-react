{"ast":null,"code":"var _jsxFileName = \"/Users/warrdadlani/Documents/Projects/Projects/YourLineRepo/yourline-react/src/components/text/TextLabel.js\";\nimport React from 'react';\n\n/*\n* Example use:\n* <TextLabel type={TextlabelTypes.PARAGRAPH} text=\"Aligned left\" alignment={TextLabelAlignment.LEFT} />\n* <TextLabel type={TextlabelTypes.PARAGRAPH} text=\"Aligned center\" alignment={TextLabelAlignment.CENTER} />\n* <TextLabel type={TextlabelTypes.PARAGRAPH} text=\"Aligned right\" alignment={TextLabelAlignment.RIGHT} />\n*/\n\nexport const TextlabelTypes = {\n  PARAGRAPH: 'p',\n  HEADING1: 'h1',\n  HEADING2: 'h2',\n  HEADING3: 'h3',\n  HEADING4: 'h4'\n};\nexport const TextLabelAlignment = {\n  LEFT: 'left',\n  RIGHT: 'right',\n  CENTER: 'center'\n};\nconst TextLabel = ({\n  type,\n  fontSize,\n  text,\n  alignment\n}) => {\n  const elementType = TextlabelTypes[type] || TextlabelTypes.PARAGRAPH;\n  const alignmentType = TextLabelAlignment[alignment] || TextLabelAlignment.LEFT;\n  const elementStyle = {\n    fontSize: type === TextlabelTypes.PARAGRAPH ? fontSize : undefined,\n    textAlign: alignmentType // Set the textAlign property based on the alignment prop\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(elementType, {\n    style: elementStyle\n  }, text));\n};\nexport default TextLabel;","map":{"version":3,"names":["React","TextlabelTypes","PARAGRAPH","HEADING1","HEADING2","HEADING3","HEADING4","TextLabelAlignment","LEFT","RIGHT","CENTER","TextLabel","type","fontSize","text","alignment","elementType","alignmentType","elementStyle","undefined","textAlign","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style"],"sources":["/Users/warrdadlani/Documents/Projects/Projects/YourLineRepo/yourline-react/src/components/text/TextLabel.js"],"sourcesContent":["import React from 'react';\n\n/*\n* Example use:\n* <TextLabel type={TextlabelTypes.PARAGRAPH} text=\"Aligned left\" alignment={TextLabelAlignment.LEFT} />\n* <TextLabel type={TextlabelTypes.PARAGRAPH} text=\"Aligned center\" alignment={TextLabelAlignment.CENTER} />\n* <TextLabel type={TextlabelTypes.PARAGRAPH} text=\"Aligned right\" alignment={TextLabelAlignment.RIGHT} />\n*/\n\nexport const TextlabelTypes = {\n    PARAGRAPH: 'p',\n    HEADING1: 'h1',\n    HEADING2: 'h2',\n    HEADING3: 'h3',\n    HEADING4: 'h4',\n};\n\nexport const TextLabelAlignment = {\n    LEFT: 'left',\n    RIGHT: 'right',\n    CENTER: 'center',\n};\n\nconst TextLabel = ({ type, fontSize, text, alignment }) => {\n    const elementType = TextlabelTypes[type] || TextlabelTypes.PARAGRAPH;\n    const alignmentType = TextLabelAlignment[alignment] || TextLabelAlignment.LEFT;\n\n    const elementStyle = {\n        fontSize: type === TextlabelTypes.PARAGRAPH ? fontSize : undefined,\n        textAlign: alignmentType, // Set the textAlign property based on the alignment prop\n    };\n\n    return (\n        <div>\n            {React.createElement(elementType, { style: elementStyle }, text)}\n        </div>\n    );\n}\n\nexport default TextLabel;\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAG;EAC1BC,SAAS,EAAE,GAAG;EACdC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE;AACd,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG;EAC9BC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAU,CAAC,KAAK;EACvD,MAAMC,WAAW,GAAGf,cAAc,CAACW,IAAI,CAAC,IAAIX,cAAc,CAACC,SAAS;EACpE,MAAMe,aAAa,GAAGV,kBAAkB,CAACQ,SAAS,CAAC,IAAIR,kBAAkB,CAACC,IAAI;EAE9E,MAAMU,YAAY,GAAG;IACjBL,QAAQ,EAAED,IAAI,KAAKX,cAAc,CAACC,SAAS,GAAGW,QAAQ,GAAGM,SAAS;IAClEC,SAAS,EAAEH,aAAa,CAAE;EAC9B,CAAC;;EAED,oBACIjB,KAAA,CAAAqB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACK3B,KAAK,CAACqB,aAAa,CAACL,WAAW,EAAE;IAAEY,KAAK,EAAEV;EAAa,CAAC,EAAEJ,IAAI,CAC9D,CAAC;AAEd,CAAC;AAED,eAAeH,SAAS"},"metadata":{},"sourceType":"module"}